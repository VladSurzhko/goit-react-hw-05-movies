{"version":3,"file":"static/js/461.f6790174.chunk.js","mappings":"yMAEaA,EAAWC,EAAAA,EAAAA,IAAH,wHASRC,EAAmBD,EAAAA,EAAAA,IAAH,2G,SCRhBE,EAAS,WACpB,OACE,SAACH,EAAD,WACI,SAACE,EAAD,WACF,SAAC,KAAD,CACEE,OAAQ,IACRC,MAAO,IACPC,OAAQ,EACRC,MAAM,UACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,OAKhB,C,wKCjBYC,EAAcX,EAAAA,EAAAA,MAAH,8HAQXY,EAAcZ,EAAAA,EAAAA,MAAH,oIAQXa,EAAab,EAAAA,EAAAA,KAAH,2CAIVc,EAAed,EAAAA,EAAAA,OAAH,sW,SCuDzB,EAtEe,WAAO,IAAD,EACnB,GAAsCe,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,EAAS,UAAGT,EAAYU,IAAI,oBAAnB,QAAmC,GAClD,GAAwCR,EAAAA,EAAAA,WAAS,GAAjD,eAAOS,EAAP,KAAqBC,EAArB,MAGAC,EAAAA,EAAAA,YAAU,WACJ,IAAMC,EAAU,mCAAG,oGAEfR,GAAa,GAFE,UAGIS,EAAAA,EAAAA,IAASN,GAHb,OAGTO,EAHS,OAIfZ,EAAUY,EAAKC,SACa,IAAxBD,EAAKC,QAAQC,OACfV,EAAS,UAAD,OAAWC,EAAX,gBAERD,EAAS,MARI,gDAWfA,EAAS,KAAMW,SAXA,yBAafb,GAAa,GAbE,4EAAH,qDAiBXK,GACHG,GAEH,GAAE,CAACH,EAAcF,IAWtB,OACE,iCACIE,GAAgBJ,IACjB,yBAAG,SAAOE,EAAU,gBAGpBJ,IAAa,SAACnB,EAAA,EAAD,KACd,UAACW,EAAD,YACA,SAACF,EAAD,UAAa,kBACX,SAACC,EAAD,CACAwB,KAAK,OACLC,MAAOZ,EACPa,SArBe,SAAAC,GACnB,IAAMC,EAAiBD,EAAIE,OAAOJ,MAClC,GAAuB,KAAnBG,EACF,OAAOvB,EAAe,CAAC,GAEzBA,EAAe,CAAEQ,UAAWe,IAC5BZ,GAAgB,EACjB,QAkBG,SAACd,EAAD,CAAcsB,KAAK,SAAnB,SAA4B,WAE3BjB,EAAOuB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAC,EAAzC,SACGH,EAAMI,SAFFJ,EAAME,GADA,MAStB,C","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Pages/Movies/Movies.styled.jsx","components/Pages/Movies/Movies.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Backdrop = styled.div`\nposition: fixed;\ntop:0;\nleft:0;\nright:0;\nbottom:0;\nbackground-color: rgba(36,36,36, 0.5);\n`\n\nexport const WrapperForLoader = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\ntransform: translate(-50%,-50%)\n`;","import { BallTriangle } from 'react-loader-spinner';\nimport { Backdrop, WrapperForLoader } from \"./Loader.styled\"\n\nexport const Loader = () => {\n  return (\n    <Backdrop>\n        <WrapperForLoader>\n      <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#6c4da9\"\n        ariaLabel=\"ball-triangle-loading\"\n        wrapperClass={{}}\n        wrapperStyle=\"\"\n        visible={true}\n      />\n      </WrapperForLoader>\n    </Backdrop>\n  );\n};","import styled from \"@emotion/styled\"\n\n\nexport const LabelSearch = styled.label`\nmargin-top: 20px;\nmargin-left: 20px;\ndisplay: block;\n  font-weight: bold;\n  margin-bottom: 10px;\n`\n\nexport const InputSearch = styled.input`\npadding: 5px;\n  padding-left: 24px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 14px;\n`\n\nexport const FormSearch = styled.form`\nmargin-top: 20px;\n`\n\nexport const SearchButton = styled.button`\n  margin: 12px;\n  padding: 10px 20px;\n  font-size: 16px;\n  background-color: #00d4ff;\n  color: white;\n  font-weight: bold;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover {\n    color: black;\n    background-color: #b7b7bb;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px black;\n  }\n`;","\n\nimport { useEffect, useState } from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getMovie } from 'components/Api/Api';\nimport { Loader } from 'components/Loader/Loader';\nimport { FormSearch, InputSearch, LabelSearch, SearchButton } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchMovie, setSearchMovie] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const movieName = searchMovie.get('movieName') ?? '';\n  const [isInputEmpty, setIsInputEmpty] = useState(true);\n\n\n  useEffect(() => {\n        const fetchMovie = async () => {\n          try {\n            setIsLoading(true);\n            const data = await getMovie(movieName);\n            setMovies(data.results);\n            if (data.results.length === 0) {\n              setError(`Movie '${movieName}' not found`);\n            } else {\n              setError(null);\n            }\n          } catch (error) {\n            setError(error.message);\n          } finally {\n            setIsLoading(false);\n          }\n        };\n    \n        if (!isInputEmpty) {\n          fetchMovie();\n        }\n      }, [isInputEmpty, movieName]);\n\n  const handleSearch = evt => {\n    const movieNameValue = evt.target.value;\n    if (movieNameValue === '') {\n      return setSearchMovie({});\n    }\n    setSearchMovie({ movieName: movieNameValue });\n    setIsInputEmpty(false);\n  };\n\n  return (\n    <>\n      {!isInputEmpty && error && (\n       <p>Movie {movieName} not found</p>\n      )}\n\n      {isLoading && <Loader />}\n      <FormSearch>\n      <LabelSearch>Movie search</LabelSearch>\n        <InputSearch \n        type=\"text\" \n        value={movieName}\n        onChange={handleSearch} />\n        \n      </FormSearch>\n\n      <SearchButton type=\"submit\">Search</SearchButton>\n\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{}}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default Movies;\n\n\n\n\n\n"],"names":["Backdrop","styled","WrapperForLoader","Loader","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","LabelSearch","InputSearch","FormSearch","SearchButton","useSearchParams","searchMovie","setSearchMovie","useState","movies","setMovies","isLoading","setIsLoading","error","setError","movieName","get","isInputEmpty","setIsInputEmpty","useEffect","fetchMovie","getMovie","data","results","length","message","type","value","onChange","evt","movieNameValue","target","map","movie","to","id","state","title"],"sourceRoot":""}