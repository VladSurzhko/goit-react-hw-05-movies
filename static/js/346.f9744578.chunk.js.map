{"version":3,"file":"static/js/346.f9744578.chunk.js","mappings":"4MAEaA,EAAWC,EAAAA,EAAAA,IAAH,wHASRC,EAAmBD,EAAAA,EAAAA,IAAH,2G,SCRhBE,EAAS,WACpB,OACE,SAACH,EAAD,WACI,SAACE,EAAD,WACF,SAAC,KAAD,CACEE,OAAQ,IACRC,MAAO,IACPC,OAAQ,EACRC,MAAM,UACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,OAKhB,C,2KCjBYC,E,QAAaX,EAAAA,OAAH,mT,SCoFvB,EAjFqB,WACnB,IAAQY,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAA0BR,EAAAA,EAAAA,UAAS,MAAnC,eAAOS,EAAP,KAAcC,EAAd,KACA,GAAkCV,EAAAA,EAAAA,WAAS,GAA3C,eAAOW,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,0GAErBF,GAAa,GAFQ,UAGDG,EAAAA,EAAAA,IAAejB,GAHd,OAGfG,EAHe,OAIfE,EAASF,EAAME,OACfE,EAAOJ,EAAMe,aAAaC,MAAM,KAAK,GACrCC,EANe,yCAMyBjB,EAAMkB,aAEhDlB,IAAU,GACZS,EAAS,oKAETN,EAAUD,GACVD,EAASD,GACTK,EAAQD,GACRG,EAAYU,IAdO,kDAqBrBR,EAAS,KAAMU,SArBM,yBAuBrBR,GAAa,GAvBQ,6EAAH,qDA0BtBE,GACD,GAAE,CAAChB,IAEJ,IAAQuB,EAAkCpB,EAAlCoB,MAAOC,EAA2BrB,EAA3BqB,SAAUC,EAAiBtB,EAAjBsB,aACzBC,QAAQC,IAAI,QAASxB,GAOrB,OACE,+BACGQ,IAAS,uBAAG,gCACZE,IAAa,SAACvB,EAAA,EAAD,KACd,SAACS,EAAD,CAAY6B,QATK,WACnBC,OAAOC,QAAQC,MAChB,EAOG,SAAmC,aACnC,4BACE,gBAAKC,IAAKvB,EAAUwB,IAAKV,KACzB,4BACE,0BACGA,GACD,0BAAOhB,QAET,yBAAG,eAA4B,GAAfkB,GAAmBS,QAAQ,GAAG,SAC9C,wBAAI,cACJ,uBAAIV,KACJ,wBAAI,YACJ,uBAAInB,EAAO8B,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,gBAGvC,4BACE,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,SAAC,KAAD,SAIP,C","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Pages/MoviesDetails/MoviesDetails.styled.jsx","components/Pages/MoviesDetails/MovieDetails.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Backdrop = styled.div`\nposition: fixed;\ntop:0;\nleft:0;\nright:0;\nbottom:0;\nbackground-color: rgba(36,36,36, 0.5);\n`\n\nexport const WrapperForLoader = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\ntransform: translate(-50%,-50%)\n`;","import { BallTriangle } from 'react-loader-spinner';\nimport { Backdrop, WrapperForLoader } from \"./Loader.styled\"\n\nexport const Loader = () => {\n  return (\n    <Backdrop>\n        <WrapperForLoader>\n      <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#6c4da9\"\n        ariaLabel=\"ball-triangle-loading\"\n        wrapperClass={{}}\n        wrapperStyle=\"\"\n        visible={true}\n      />\n      </WrapperForLoader>\n    </Backdrop>\n  );\n};","import styled from \"@emotion/styled\"\n\n\nexport const ButtonBack = styled.button`\nmargin-top: 10px;\nmargin-bottom: 10px;\nbackground-color: #00d4ff;\ncolor: white;\nwidth: 120px;\nheight: 35px;\nborder-radius: 10px;\n&:hover {\n    color: black;\n    background-color: #b7b7bb;\n    &:focus {\n      outline: none;\n      box-shadow: 0 0 0 2px black;\n    }\n  }\n`","import { useEffect, useState } from 'react';\nimport { getDetailMovie } from 'components/Api/Api';\nimport { Loader } from 'components/Loader/Loader';\nimport { Outlet, useParams, Link } from 'react-router-dom';\nimport { ButtonBack } from './MoviesDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [date, setDate] = useState('');\n  const [urlImage, setUrlImage] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchDetalsMovie = async () => {\n      try {\n        setIsLoading(true)\n        const movie = await getDetailMovie(movieId);\n        const genres = movie.genres;\n        const date = movie.release_date.split('-')[0];\n        const url = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n\n        if (movie === []) {\n          setError(`Інформація по фільму відсутня`);\n        } else {\n          setGenres(genres);\n          setMovie(movie);\n          setDate(date);\n          setUrlImage(url);\n        }\n        // setGenres(genres);\n        // setMovie(movie);\n        // setDate(date);\n        // setUrlImage(url);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDetalsMovie();\n  }, [movieId]);\n\n  const { title, overview, vote_average } = movie;\n  console.log('movie', movie);\n\n  const handleGoBack = () => {\n    window.history.back(); \n  };\n\n\n  return (\n    <section>\n      {error && <p>Sorry, something went wrong</p>}\n      {isLoading && <Loader />}\n      <ButtonBack onClick={handleGoBack}>Go Back</ButtonBack>\n      <div>\n        <img src={urlImage} alt={title}></img>\n        <div>\n          <h1>\n            {title}\n            <span>{date}</span>\n          </h1>\n          <p>User Score:{(vote_average * 10).toFixed(0)} %</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.map(el => el.name).join(' / ')}</p>\n        </div>\n      </div>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </section>\n  );\n};\n\nexport default MovieDetails;"],"names":["Backdrop","styled","WrapperForLoader","Loader","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","ButtonBack","movieId","useParams","useState","movie","setMovie","genres","setGenres","date","setDate","urlImage","setUrlImage","error","setError","isLoading","setIsLoading","useEffect","fetchDetalsMovie","getDetailMovie","release_date","split","url","poster_path","message","title","overview","vote_average","console","log","onClick","window","history","back","src","alt","toFixed","map","el","name","join","to"],"sourceRoot":""}